type Result = variant { Ok : nat; Err : TxError };
type TxError = variant {
  InsufficientAllowance;
  BurnUnknown;
  InsufficientBalance;
  BurnFailed;
  Unauthorized;
  ConsumeMessageFailed;
  NotApproved;
  SendMessageFailed;
  TransferFailed;
  MintUnknown;
  MintFailed;
};
service : () -> {
  burn : (principal, nat) -> (Result);
  handle_message : (principal, vec nat) -> (Result);
  mint : (vec nat) -> (Result);
}